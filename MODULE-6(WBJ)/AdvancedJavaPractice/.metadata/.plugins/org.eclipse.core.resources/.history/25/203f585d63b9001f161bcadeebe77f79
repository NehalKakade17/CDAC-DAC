package dependent;


import dependency.EnglishTeacher;
import dependency.ScienceTeacher;
import dependency.Teacher;

public class PublicSchool implements School {	
	//private Teacher subjectTeacher;//=new EnglishTeacher();
	Teacher englishTeacher = new EnglishTeacher(); // Assuming EnglishTeacher is a subclass of Teacher
	Teacher scienceTeacher = new ScienceTeacher();
	 

	//constuctor based D.I - injecting mandatory dependencies
	public PublicSchool(Teacher englishTeacher,Teacher scienceTeacher) {
		this.englishTeacher=englishTeacher;
		this.scienceTeacher = scienceTeacher;
		System.out.println("In constructor - " + getClass());
	}

	@Override
	public void manageAcademics() {
		System.out.println("Managing academics here -");
		englishTeacher.teach();
		scienceTeacher.teach();
	}
	

	

//	//setter based D.I - injecting optional dependencies !
//	public void setSubjectTeacher(Teacher subjectTeacher) {
//		System.out.println("in setter");
//		this.subjectTeacher = subjectTeacher;
//	}
	

	

}
